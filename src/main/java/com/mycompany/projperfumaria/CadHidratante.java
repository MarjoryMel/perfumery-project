//Nome: Marjory Mel Ferreira Ferro Lemos - RA: 2564238

package com.mycompany.projperfumaria;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author marjory
 */
public class CadHidratante extends javax.swing.JFrame {
    private Hidratante h1 = new Hidratante();
    private BdHidratante gh = BdHidratante.geraGerHidra();
    private static CadHidratante chUnic;

    /**
     * Creates new form CadHidratante
     */
    public CadHidratante() {
        initComponents();
    }

    // Método Singleton
    public static CadHidratante geraCadHidra(){
        if(chUnic == null){
            chUnic = new CadHidratante();
        }
        return chUnic;
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cxAnoAtualHidra = new javax.swing.JTextField();
        cxHidratacao = new javax.swing.JTextField();
        cxSolar = new javax.swing.JTextField();
        rtValidadeHidra = new javax.swing.JLabel();
        rtAnoAtualHidra = new javax.swing.JLabel();
        rtHidratacao = new javax.swing.JLabel();
        rtSolar = new javax.swing.JLabel();
        cxNomeHidra = new javax.swing.JTextField();
        cxPrecoHidra = new javax.swing.JTextField();
        cxCodProdutoHidra = new javax.swing.JTextField();
        cxCupomHidra = new javax.swing.JTextField();
        rtNomeHidra = new javax.swing.JLabel();
        rtPrecoHidra = new javax.swing.JLabel();
        rtCodProdutoHidra = new javax.swing.JLabel();
        rtCupomHidra = new javax.swing.JLabel();
        cxValidadeHidra = new javax.swing.JTextField();
        btInsHidra = new javax.swing.JButton();
        btCosHidra = new javax.swing.JButton();
        btAltHidra = new javax.swing.JButton();
        btExcluirHidra = new javax.swing.JButton();
        btLimparHidra = new javax.swing.JButton();
        btSairHidra = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHidra = new javax.swing.JTable();
        btInfoHidra = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cxAnoAtualHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxAnoAtualHidraActionPerformed(evt);
            }
        });

        cxHidratacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxHidratacaoActionPerformed(evt);
            }
        });

        rtValidadeHidra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtValidadeHidra.setText("Ano de Validade:");

        rtAnoAtualHidra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtAnoAtualHidra.setText("Ano Atual:");

        rtHidratacao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtHidratacao.setText("Fator Hidratação:");

        rtSolar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtSolar.setText("Proteção Solar:");

        cxNomeHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxNomeHidraActionPerformed(evt);
            }
        });

        cxPrecoHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxPrecoHidraActionPerformed(evt);
            }
        });

        cxCupomHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxCupomHidraActionPerformed(evt);
            }
        });

        rtNomeHidra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtNomeHidra.setText("Nome do Produto:");

        rtPrecoHidra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtPrecoHidra.setText("Preço do Produto:");

        rtCodProdutoHidra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtCodProdutoHidra.setText("ID do Produto:");

        rtCupomHidra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtCupomHidra.setText("Cupom (%):");

        btInsHidra.setText("Inserir");
        btInsHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsHidraActionPerformed(evt);
            }
        });

        btCosHidra.setText("Consultar");
        btCosHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCosHidraActionPerformed(evt);
            }
        });

        btAltHidra.setText("Alterar Preço");
        btAltHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAltHidraActionPerformed(evt);
            }
        });

        btExcluirHidra.setText("Excluir");
        btExcluirHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirHidraActionPerformed(evt);
            }
        });

        btLimparHidra.setText("Limpar");
        btLimparHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparHidraActionPerformed(evt);
            }
        });

        btSairHidra.setText("Sair");
        btSairHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairHidraActionPerformed(evt);
            }
        });

        tbHidra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nome", "Preço"
            }
        ));
        tbHidra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHidraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHidra);

        btInfoHidra.setText("Informação");
        btInfoHidra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInfoHidraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rtAnoAtualHidra, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(rtHidratacao, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(rtSolar, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addComponent(rtCupomHidra, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rtCodProdutoHidra, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rtPrecoHidra, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rtNomeHidra, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(rtValidadeHidra, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cxCupomHidra)
                                .addComponent(cxValidadeHidra)
                                .addComponent(cxAnoAtualHidra, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cxHidratacao, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxNomeHidra, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxSolar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cxCodProdutoHidra, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(cxPrecoHidra, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btInfoHidra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btLimparHidra)
                        .addGap(12, 12, 12)
                        .addComponent(btSairHidra))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btInsHidra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btCosHidra)
                        .addGap(12, 12, 12)
                        .addComponent(btAltHidra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btExcluirHidra))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btInsHidra)
                        .addComponent(btCosHidra)
                        .addComponent(btAltHidra)
                        .addComponent(btExcluirHidra))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cxCodProdutoHidra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rtCodProdutoHidra)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxNomeHidra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtNomeHidra))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxPrecoHidra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtPrecoHidra))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxCupomHidra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtCupomHidra))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxValidadeHidra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtValidadeHidra))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxAnoAtualHidra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtAnoAtualHidra))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxHidratacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtHidratacao)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btLimparHidra)
                        .addComponent(btSairHidra)
                        .addComponent(btInfoHidra))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cxSolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rtSolar)))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cxAnoAtualHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxAnoAtualHidraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxAnoAtualHidraActionPerformed

    private void cxNomeHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxNomeHidraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxNomeHidraActionPerformed

    private void cxPrecoHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxPrecoHidraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxPrecoHidraActionPerformed

    private void cxCupomHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxCupomHidraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxCupomHidraActionPerformed

    private void btInsHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsHidraActionPerformed
        insHidra();
        listTabHidra();
        limparHidra();
    }//GEN-LAST:event_btInsHidraActionPerformed

    private void btCosHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCosHidraActionPerformed
        consHidraID();
    }//GEN-LAST:event_btCosHidraActionPerformed

    private void btAltHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAltHidraActionPerformed
        altHidraID();
        listTabHidra();
    }//GEN-LAST:event_btAltHidraActionPerformed

    private void btExcluirHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirHidraActionPerformed
        excHidraID();
        listTabHidra();
    }//GEN-LAST:event_btExcluirHidraActionPerformed

    private void btLimparHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparHidraActionPerformed
        limparHidra();
    }//GEN-LAST:event_btLimparHidraActionPerformed

    private void btSairHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairHidraActionPerformed
        sairHidra();
    }//GEN-LAST:event_btSairHidraActionPerformed

    private void cxHidratacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxHidratacaoActionPerformed
 
    }//GEN-LAST:event_cxHidratacaoActionPerformed

    private void tbHidraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHidraMouseClicked
        selectTabHidra();
    }//GEN-LAST:event_tbHidraMouseClicked

    private void btInfoHidraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInfoHidraActionPerformed
        info();
    }//GEN-LAST:event_btInfoHidraActionPerformed
    
    public void listTabHidra(){
        DefaultTableModel modelo = (DefaultTableModel)tbHidra.getModel();
        int posLin = 0;
        
        modelo.setRowCount(posLin);
        
        for(Hidratante hidra:gh.getBdHidra()){ 
            modelo.insertRow(posLin, new Object[]{hidra.getCodProduto(),hidra.getNome(), hidra.getPreco()});
            posLin++;
        }
    }
    
    public void selectTabHidra(){
        String valLinTab = "";
        
        int posLin = tbHidra.getSelectedRow();
        int col = 0;
        for(col = 0; col < tbHidra.getColumnCount(); col++){
            valLinTab += tbHidra.getModel().getValueAt(posLin, col).toString();
            
            if(col+1 < tbHidra.getColumnCount()){
                valLinTab += " - ";
            }
        }
        
        float desconto = h1.calc(h1.getCupom(), h1.getPreco());
        float validadePreco = h1.calc(h1.getPreco(),h1.getValidade(),h1.getAnoAtual());
        float validadeRestante = h1.calcular();
        
                JOptionPane.showMessageDialog(
                null,
                "\nID do produto: " + h1.getCodProduto()+
                "\nNome do produto: " + h1.getNome()+
                "\nPreço do produto: " + h1.getPreco()+
                "\nCupom em percentual: " + h1.getCupom()+
                "\nAno de validade: " + h1.getValidade()+
                "\nAno atual: " + h1.getAnoAtual()+
                "\nFator hidratação: " +h1.getFatorHidratacao()+
                "\nProteção solar: " +h1.getProtecaoSolar()+
                "\nDesconto com cupom: " + desconto + 
                "\nRelação preço/validade : " + validadePreco + 
                "\nValidade restante: " + validadeRestante + " anos",
                "RESULTADOS DO PRODUTO: ",
                1
        );

    }
    
    public void excHidraID(){
        h1 = new Hidratante();
        
        h1.setCodProduto(Integer.parseInt(cxCodProdutoHidra.getText()));
        
        h1 = gh.delHidraID(h1);
        
        if(h1 == null){
    
            JOptionPane.showMessageDialog(
                    null,
                    "Produto excluido com sucesso!",
                    "EXCLUSÃO DE PRODUTO",
                    1
            );
            limparHidra();
        }
        else{
                    JOptionPane.showMessageDialog(
                    null,
                    "NÃO EXISTE PRODUTO COM ESTE ID",
                    "EXCLUSÃO DE PRODUTO",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
public void altHidraID() {
    try {
        h1 = new Hidratante();

        h1.setCodProduto(Integer.parseInt(cxCodProdutoHidra.getText()));

        h1 = gh.atualizaHidraID(h1);

        if (h1 != null) {
            cxCodProdutoHidra.setText(Integer.toString(h1.getCodProduto()));
            cxNomeHidra.setText(h1.getNome());
            cxPrecoHidra.setText(Float.toString(h1.getPreco()));
            cxCupomHidra.setText(Float.toString(h1.getCupom()));
            cxValidadeHidra.setText(Float.toString(h1.getValidade()));
            cxAnoAtualHidra.setText(Float.toString(h1.getAnoAtual()));
            cxHidratacao.setText(Integer.toString(h1.getFatorHidratacao()));
            cxSolar.setText(h1.getProtecaoSolar());

            JOptionPane.showMessageDialog(
                    null,
                    "Confira os dados!",
                    "ALTERAÇÃO DE PRODUTO",
                    JOptionPane.INFORMATION_MESSAGE
            );
            limparHidra();
        } else {
            JOptionPane.showMessageDialog(
                    null,
                    "NÃO EXISTE PRODUTO COM ESTE CÓDIGO",
                    "ALTERAÇÃO DE PRODUTO",
                    JOptionPane.ERROR_MESSAGE
            );
        }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(
                    null,
                    "Verifique os valores inseridos!",
                    "ERRO ENTRADA DE DADOS",
                    JOptionPane.ERROR_MESSAGE
            );
            cxCodProdutoHidra.setText("");
            cxCodProdutoHidra.requestFocus();
    }
}

    
    public void consHidraID(){
        h1 = new Hidratante();
    
        h1.setCodProduto(Integer.parseInt(cxCodProdutoHidra.getText()));
        
        h1 = gh.consHidraID(h1);
        
        if(h1 != null){
            cxCodProdutoHidra.setText(Integer.toString(h1.getCodProduto()));
            cxNomeHidra.setText(h1.getNome());
            cxPrecoHidra.setText(Float.toString(h1.getPreco()));
            cxCupomHidra.setText(Float.toString(h1.getCupom()));
            cxValidadeHidra.setText(Float.toString(h1.getValidade()));
            cxAnoAtualHidra.setText(Float.toString(h1.getAnoAtual()));
            cxHidratacao.setText(Integer.toString(h1.getFatorHidratacao()));
            cxSolar.setText(h1.getProtecaoSolar());
            
            JOptionPane.showMessageDialog(
                    null,
                    "Produto encontrado com sucesso! - Verifique os dados",
                    "CONSULTA DE PRODUTO",
                    1
            );
        }
        else{
                    JOptionPane.showMessageDialog(
                    null,
                    "Esse produto não existe!",
                    "CONSULTA DE PRODUTO",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    public void insHidra(){
        try{
            h1 = new Hidratante();

            h1.setCodProduto(Integer.parseInt(cxCodProdutoHidra.getText()));
            h1.setNome(cxNomeHidra.getText());
            h1.setPreco(Float.parseFloat(cxPrecoHidra.getText()));

            try{
                h1.setCupom(Float.parseFloat(cxCupomHidra.getText()));
            }
                catch(CupomException cupom){
                    cupom.impCupom();
                    h1 = cupom.corCupomHidra(h1);
            }

            h1.setValidade(Float.parseFloat(cxValidadeHidra.getText()));

            try{
                h1.setAnoAtual(Float.parseFloat(cxAnoAtualHidra.getText()));
            }
            catch(AnoAtualException year){
                year.impAnoAtual();
                h1 = year.corAnoHidra(h1);
            }

            h1.setFatorHidratacao(Integer.parseInt(cxHidratacao.getText()));
            h1.setProtecaoSolar(cxSolar.getText());

            h1 = gh.insHidra(h1);

                if(h1 != null){
                    JOptionPane.showMessageDialog(
                            null,
                            "Produto cadastrado com sucesso!",
                            "CADASTRO DE PRODUTO",
                            1
                    );
                }
                else{
                    JOptionPane.showMessageDialog(
                            null,
                            "Produto duplicado",
                            "CADASTRO DE PRODUTO",
                            JOptionPane.ERROR_MESSAGE
                    );
                }
            }
            catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(
                    null,
                    "Verifique os valores inseridos!",
                    "ERRO ENTRADA DE DADOS",
                    JOptionPane.ERROR_MESSAGE
            ); 
            cxCodProdutoHidra.setText("");
            cxCodProdutoHidra.requestFocus();
        }

    }
    
    public void sairHidra(){
        int resp = JOptionPane.showConfirmDialog(
                null,
                "Deseja realmente sair?",
                "SAIR",
                JOptionPane.YES_NO_OPTION
        );
        if(resp == 0){
            dispose();
        }
    }
    
    public void limparHidra(){
        cxCodProdutoHidra.setText("");
        cxNomeHidra.setText("");
        cxPrecoHidra.setText("");
        cxCupomHidra.setText("");
        cxValidadeHidra.setText("");
        cxAnoAtualHidra.setText("");
        cxHidratacao.setText("");
        cxSolar.setText("");
        cxCodProdutoHidra.requestFocus();
    }
    
    public void info(){
        Hidratante bt = new Hidratante();
        bt.explicacaoProduto();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadHidratante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadHidratante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadHidratante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadHidratante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadHidratante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAltHidra;
    private javax.swing.JButton btCosHidra;
    private javax.swing.JButton btExcluirHidra;
    private javax.swing.JButton btInfoHidra;
    private javax.swing.JButton btInsHidra;
    private javax.swing.JButton btLimparHidra;
    private javax.swing.JButton btSairHidra;
    private javax.swing.JTextField cxAnoAtualHidra;
    private javax.swing.JTextField cxCodProdutoHidra;
    private javax.swing.JTextField cxCupomHidra;
    private javax.swing.JTextField cxHidratacao;
    private javax.swing.JTextField cxNomeHidra;
    private javax.swing.JTextField cxPrecoHidra;
    private javax.swing.JTextField cxSolar;
    private javax.swing.JTextField cxValidadeHidra;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rtAnoAtualHidra;
    private javax.swing.JLabel rtCodProdutoHidra;
    private javax.swing.JLabel rtCupomHidra;
    private javax.swing.JLabel rtHidratacao;
    private javax.swing.JLabel rtNomeHidra;
    private javax.swing.JLabel rtPrecoHidra;
    private javax.swing.JLabel rtSolar;
    private javax.swing.JLabel rtValidadeHidra;
    private javax.swing.JTable tbHidra;
    // End of variables declaration//GEN-END:variables
}
